name: Audiobook Shelf Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push image to ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Save private key
      run: |
        echo "${{ secrets.EC2_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy on EC2
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          export ECR_REGISTRY=${ECR_REGISTRY}
          export ECR_REPOSITORY=${ECR_REPOSITORY}
          aws ecr get-login-password --region eu-north-1 | sudo docker login --username AWS --password-stdin 688567268604.dkr.ecr.eu-north-1.amazonaws.com
          echo "Pulling: $ECR_REGISTRY/$ECR_REPOSITORY:latest"
        sudo docker pull 688567268604.dkr.ecr.eu-north-1.amazonaws.com/audiobookshelf:latest
        sudo docker stop audiobookshelf || true
        sudo docker rm audiobookshelf || true
        sudo docker run -d --name audiobookshelf -p 13378:80 688567268604.dkr.ecr.eu-north-1.amazonaws.com/audiobookshelf:latest
        EOF
